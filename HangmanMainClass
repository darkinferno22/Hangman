import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class HangmanMainClass {
    
    public static void main(String[] args) {
    	beginning:;
    	int lettersRemaining = 0;
        int correct = 0;
        String answer;
        //Array to keep track of which letters you have guessed
        String[] lettersGuessed = new String[26/*Number of letters in the alphabet*/];
        for(int i = 0; i < lettersGuessed.length; i++){
        	lettersGuessed[i] = "";
        }
		Scanner scan = new Scanner(System.in);
        //ADD: choice for random word or own input///////////////////
		System.out.println("Would you like to: \n[1]Enter your own word\n[2]Have a random word selected for you");
        System.out.println("Enter the word to guess:");
        answer = scan.nextLine();
        //Split word into individual letters
        String[] answerArray = answer.split("");
        System.out.println(answerArray[1]);
        guessLoop: //Used for restarting if guess is not one letter
        while(true){
            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                Logger.getLogger(HangmanMainClass.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Which letter do you guess?");
            String guess;
            guess = new String(scan.nextLine());
            //Checks if you have already guessed the letter
            for(String let: lettersGuessed){
            	if(guess.equals(let)){
            		System.out.println("You have already guessed that letter! Try again faggot.");
            		continue guessLoop;
            	}
            };
            //sets lettersGuessed to an empty array, avoids NullPointerException
            for(int i = 0; i < lettersGuessed.length; i++){
            	if(lettersGuessed[i].equals("")){
            		lettersGuessed[i] = guess;
            		break;
            	}
            }
            //Checks if guess is exactly one letter, if not forces you to try again
            if(splitString(guess).length != 2){
                System.out.println("One letter please!");
                continue guessLoop;
            }
            //Checks each letter in the answer to see if it matches your guess
            for(String value: answerArray){
                if(value.equals(guess)){
                    System.out.print(value);
                    correct++;//Checks number of letters in word
                }
                //BUG: First value of answerArray is empty
                else if(value.equals("")){
                	System.out.print("");
                }
                //For nonmatching letters
                else{
                	System.out.print("_");
                	lettersRemaining++;
                }
            };
            System.out.print("\n");
            try {
				Thread.sleep(500);
			} catch (InterruptedException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
            if(correct == 0){
                System.out.println("There are none of your letter in the word.");
            }
            else if(correct == 1){
                System.out.println("There is 1 " + guess + " in the word.");
            }
            else{
                System.out.println("There are " + correct + " " + guess + "'s in the word.");
            }
            if(lettersRemaining == 0){
            	System.out.println("You win!\n[1] Play again\n[2] Quit");
            }
            else{
            	System.out.println("Letters remaining: " + lettersRemaining);
            }
            correct = 0;
            lettersRemaining = 0;
            for(String value: lettersGuessed){
            	System.out.print(value + " ");
            	try {
					Thread.sleep(100);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
            }
            System.out.println();
        }
        
        
    }
    //Method for turning any string into an array of its individual characters
    public static String[] splitString(String s){
        return s.split("");
    }
    
}
